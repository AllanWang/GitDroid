query getIssues($login: String!, $state: [IssueState!], $count: Int!) {
    user(login: $login) {
        issues(first: $count, orderBy: {field: CREATED_AT, direction: DESC}, states: $state) {
            nodes {
                ...ShortIssueRowItem
            }
        }
    }
}

query getPullRequests($login: String!, $count: Int!)  {
    user(login: $login) {
        pullRequests(first: $count, orderBy: {field: CREATED_AT, direction: DESC}) {
            nodes {
                ...ShortPullRequestRowItem
            }
        }
    }
}

query getIssue($login: String!, $repo: String!, $number: Int!) {
    repository(owner: $login, name: $repo) {
        issue(number: $number) {
            ... FullIssue
        }
    }
}

query getPullRequest($login: String!, $repo: String!, $number: Int!) {
    repository(owner: $login, name: $repo) {
        pullRequest(number: $number) {
            ... FullPullRequest
        }
    }
}


query getLabels($login: String!, $repo: String!, $page: String){
    repositoryOwner(login: $login) {
        repository(name: $repo) {
            labels(first: 30, after: $page){
                totalCount
                pageInfo {
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                }
                nodes {
                    ... ShortLabel
                }
            }
        }
    }
}

query getAssignees($login: String!, $repo: String!, $page: String) {
    repositoryOwner(login: $login) {
        repository(name: $repo) {
            assignableUsers(first: 30, after: $page) {
                totalCount
                pageInfo {
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                }
                nodes {
                    ...ShortUserRowItem
                }
            }
        }
    }
}

query getMilestones($login: String!, $repo: String!, $page: String) {
    repositoryOwner(login: $login) {
        repository(name: $repo) {
            milestones(first: 30, after: $page) {
                totalCount
                pageInfo {
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                }
                nodes {
                    ... ShortMilestone
                }
            }
        }
    }
}
