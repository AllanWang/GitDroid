fragment ObjectItem on GitObject {
    ... on Tree {
        entries {
            ...TreeEntryItem
        }
    }
    ... on Blob {
        text
        isTruncated
    }
    ... on Commit {
        tree {
            entries {
                ...TreeEntryItem
            }
        }
    }
}

fragment TreeEntryItem on TreeEntry {
    oid
    name
    type
    obj: object {
        ... on Blob {
            byteSize
            isBinary
        }
    }
}

fragment RepoNameAndOwner on Repository {
    name
    owner {
        login
        url
    }
}

fragment ShortRepoRowItem on Repository {
    ...RepoNameAndOwner
    id
    databaseId
    nameWithOwner
    description
    isFork
    isArchived
    isPrivate
    isMirror
    forkCount
    primaryLanguage {
        color
        name
    }
    defaultBranchRef {
        ... ShortRef
    }
    issues(first: 0, states: OPEN) {
        totalCount
    }
    pullRequests(first: 0, states: OPEN) {
        totalCount
    }
    forks(first: 0) {
        totalCount
    }
    isPrivate
    stargazers(first: 0) {
        totalCount
    }
    watchers(first: 0) {
        totalCount
    }
    createdAt
    updatedAt
    pushedAt
}

fragment RepoMainInfo on Repository {
    description
    isFork
    isArchived
    isPrivate
    isMirror
    forkCount
    primaryLanguage {
        color
        name
    }
    issues(first: 20, states: OPEN) {
        totalCount
    }
    pullRequests(first: 20, states: OPEN) {
        totalCount
    }
    forks(first: 20) {
        totalCount
    }
    isPrivate
    stargazers(first: 20) {
        totalCount
    }
    watchers(first: 20) {
        totalCount
    }
    createdAt
    updatedAt
    pushedAt
}

fragment FullRepo on Repository {
    ... ShortRepoRowItem
    url
    openGraphImageUrl
    licenseInfo {
        key
        featured
    }
}

fragment ShortContributions on ContributionsCollection {
    contributionCalendar {
        colors
        weeks {
            contributionDays {
                color
            }
        }
    }
}

fragment ShortIssueRowItem on Issue {
    id
    databaseId
    number
    createdAt
    author {
        ...ShortActor
    }
    title
    repository {
        ...RepoNameAndOwner
    }
    comments(first: 1) {
        totalCount
    }
    url
    locked
}

fragment ShortPullRequestRowItem on PullRequest {
    id
    databaseId
    number
    createdAt
    author {
        ...ShortActor
    }
    title
    repository {
        ...RepoNameAndOwner
    }
    comments(first: 1) {
        totalCount
    }
    url
    locked
}



fragment ShortUserRowItem on User {
    id
    name
    login
    avatarUrl(size: 150)
    location
    bio
    viewerCanFollow
    viewerIsFollowing
    url
}

fragment ShortActor on Actor {
    login
    avatarUrl(size: 150)
    url
}

fragment ShortPullRequestCommit on PullRequestCommit {
    c: commit {
        ...ShortCommit
    }
}

fragment ShortCommit on Commit {
    author {
        name
        avatarUrl(size: 150)
    }
    message
    abbreviatedOid
    oid
    commitUrl
    authoredDate
    committedViaWeb
    id
}

fragment FullPullRequest on PullRequest {
    id
    databaseId
    number
    title
    bodyHTML
    body
    state
    createdAt
    updatedAt
    closed
    closedAt
    locked
    activeLockReason
    viewerSubscription
    viewerDidAuthor
    viewerCannotUpdateReasons
    viewerCanUpdate
    viewerCanSubscribe
    url
    ...ShortReaction
    author {
        ...ShortActor
    }
    createdViaEmail
    repository {
        nameWithOwner
    }
    authorAssociation
    comments(first: 20) {
        nodes {
            ...ShortIssueComment
        }
    }
    participants(first: 10) {
        nodes {
            ... ShortUserRowItem
        }
    }
    labels(first: 30) {
        nodes {
            ... ShortLabel
        }
    }
    #    assignees(first: 30) {
    #        nodes {
    #            ... ShortUserRowItem
    #        }
    #    }
    #    milestone {
    #        ...MilestoneFragment
    #    }
}

fragment FullIssue on Issue {
    id
    databaseId
    number
    title
    bodyHTML
    body
    state
    createdAt
    updatedAt
    closed
    closedAt
    locked
    activeLockReason
    viewerSubscription
    viewerDidAuthor
    viewerCannotUpdateReasons
    viewerCanUpdate
    viewerCanSubscribe
    url
    ...ShortReaction
    author {
        ...ShortActor
    }
    createdViaEmail
    repository {
        nameWithOwner
    }
    authorAssociation
    comments(first: 20) {
        nodes {
            ...ShortIssueComment
        }
    }
    participants(first: 10) {
        nodes {
            ... ShortUserRowItem
        }
    }
    labels(first: 30) {
        nodes {
            ... ShortLabel
        }
    }
    #    assignees(first: 30) {
    #        nodes {
    #            ... ShortUserRowItem
    #        }
    #    }
    #    milestone {
    #        ...MilestoneFragment
    #    }
}

fragment ShortIssueComment on IssueComment {
    ...ShortComment
    ...ShortReaction
    viewerCanUpdate
    viewerCanDelete
}

fragment ShortComment on Comment {
    author {
        ...ShortActor
    }
    authorAssociation
    bodyText
    createdAt
    includesCreatedEdit
    updatedAt
}

fragment ShortReaction on Reactable {
    viewerCanReact
    reactionGroups {
        ...ShortReactionGroup
    }
}

fragment ShortReactionGroup on ReactionGroup {
    content
    createdAt
    viewerHasReacted
    users(first: 0) {
        totalCount
    }
}

fragment ShortLabel on Label {
    color
    description
    name
    id
    url
    createdAt
    isDefault
}

fragment ShortMilestone on Milestone {
    description
    dueOn
    id
    closed
    number
    url
    title
    state
}

fragment ShortRef on Ref {
    name
    prefix
    target {
        oid
    }
}

fragment ShortPageInfo on PageInfo {
    startCursor
    endCursor
    hasNextPage
    hasPreviousPage
}