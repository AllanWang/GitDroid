fragment ShortRepoRowItem on Repository {
    id
    databaseId
    name
    nameWithOwner
    isFork
    isArchived
    isPrivate
    isMirror
    forkCount
    primaryLanguage {
        color
        name
    }
    issues(first: 0, states: OPEN) {
        totalCount
    }
    pullRequests(first: 0, states: OPEN) {
        totalCount
    }
    forks(first: 0) {
        totalCount
    }
    isPrivate
    stargazers(first: 1) {
        totalCount
    }
    watchers(first: 1) {
        totalCount
    }
    createdAt
    updatedAt
}

fragment ShortContributions on ContributionsCollection {
    startedAt
    endedAt
    contributionCalendar {
        colors
        weeks {
            contributionDays {
                contributionCount
            }
        }
        months {
            name
            firstDay
        }
    }
}

fragment ShortIssueRowItem on Issue {
    id
    databaseId
    number
    createdAt
    author {
        ...ShortActor
    }
    title
    repository {
        nameWithOwner
    }
    comments(first: 1) {
        totalCount
    }
    url
    locked
}

fragment ShortPullRequestRowItem on PullRequest {
    id
    databaseId
    number
    createdAt
    author {
        ...ShortActor
    }
    title
    repository {
        nameWithOwner
    }
    comments(first: 1) {
        totalCount
    }
    url
    locked
}



fragment ShortUserRowItem on User {
    id
    name
    login
    avatarUrl(size: 150)
    location
    bio
    viewerCanFollow
    viewerIsFollowing
    url
}

fragment ShortActor on Actor {
    login
    avatarUrl(size: 150)
    url
}

fragment CommitFragment on Commit {
    author {
        name
        avatarUrl
    }
    message
    abbreviatedOid
    oid
    commitUrl
    authoredDate
    committedViaWeb
    id
}

fragment FullIssue on Issue {
    id
    databaseId
    number
    title
    bodyHTML
    body
    state
    createdAt
    updatedAt
    closed
    closedAt
    locked
    activeLockReason
    viewerSubscription
    viewerDidAuthor
    viewerCannotUpdateReasons
    viewerCanUpdate
    viewerCanSubscribe
    viewerCanReact
    url
    userContentEdits(first: 0) {
        totalCount
    }
    author {
        avatarUrl
        login
        url
    }
    reactionGroups {
        ... Reactions
    }
    createdViaEmail
    repository {
        nameWithOwner
    }
    authorAssociation
    participants(first: 10) {
        nodes {
            ... ShortUserRowItem
        }
    }
    labels(first: 30) {
        nodes {
            ... Labels
        }
    }
    assignees(first: 30) {
        nodes {
            ... ShortUserRowItem
        }
    }
    milestone {
        ...MilestoneFragment
    }
}

fragment Reactions on ReactionGroup {
    content
    createdAt
    viewerHasReacted
    users(first: 0) {
        totalCount
    }
}

fragment Labels on Label {
    color
    description
    name
    id
    url
    createdAt
    isDefault
}

fragment MilestoneFragment on Milestone {
    description
    dueOn
    id
    closed
    number
    url
    title
    state
}